version: '3'

services:

  nginx:
    build:
      context: nginx
    ports:
      - "8000:80"
    links:
      - node
    networks:
      - node-networks

  node:
    build:
      context: node
      dockerfile: Dockerfile.prod
    container_name: node
    entrypoint: dockerize --wait tcp://db:3306 -timeout 30s ./.docker/entrypoint.sh
    # command: node index.js
    volumes:
      - ./node:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    # ports:
    #   - "3000:3000"
    depends_on:
      - db
    networks:
      - node-networks

  # db:
  #   build:
  #     context: db
  #   container_name: db
  #   # entrypoint: ./.docker/init_db.sh
  #   command: --innodb-use-native-aio=0
  #   restart: always
  #   tty: true
  #   # volumes:
  #   #   - ./mysql:/var/lib/mysql
  #   volumes:
  #     - ./db/dump:/docker-entrypoint-initdb.d
  #   networks:
  #     - node-networks
  #   # environment:
  #   #   - MYSQL_DATABASE=nodedb
  #   #   - MYSQL_ROOT_PASSWORD=root

  db:
    image: mysql
    container_name: db
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    tty: true
    networks:
      - node-networks
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=nodedb
    volumes:
      - ./db/dump:/docker-entrypoint-initdb.d

networks:
  node-networks:
    driver: bridge